name: test-mac
on:
  push:
    # tags: # 当我们提交代码为tag 是以'v'开头的时候才会触发自动部署到服务端 如 git push tag v0.1.0
    #   - 'v*'
    branches:
      - main-xx
    #   - dev
    # package.json 更改后再触发发布
#    paths: [ "package.json" ]
jobs:
  buildStatic:
    runs-on: ubuntu-latest
    steps:
      # 下载源码
      - name: Checkout code
        uses: actions/checkout@v2

      # 打包构建 html
      - name: Install Node and NPM
        uses: actions/setup-node@v1
        with:
          node-version: 16
      # npm install
      - run: |
          cd html 
          npm install
          npm run build

      # 创建release相关目录
      - run: |
          mkdir release
          mkdir release/base
          
          cp -rf package.json release/
          cp -rf RELEASE.md release/
          cp -rf README.md release/base/
          cp -rf CHANGELOG.md release/base/CHANGELOG.md
          
          cp -rf release/base release/teamide-linux-x64
          cp -rf release/base release/teamide-server-linux-x64
          cp -rf release/base release/teamide-darwin-x64
          cp -rf release/base release/teamide-windows-x64
          
          mkdir release/teamide-server-linux-x64/conf
          cp -rf conf/release/* release/teamide-server-linux-x64/conf/

      # 上传共享资源
      - uses: actions/upload-artifact@v2
        with:
          name: release
          path: release

      # 上传共享资源
      - uses: actions/upload-artifact@v2
        with:
          name: html
          path: html/dist

  buildMAC:
    needs: buildStatic
    runs-on: macos-latest
    steps:
      # 下载源码
      - name: Checkout code
        uses: actions/checkout@v2

      # 下载共享资源
      - uses: actions/download-artifact@v2
        with:
          name: release
          path: release

      # 下载共享资源
      - uses: actions/download-artifact@v2
        with:
          name: html
          path: html/dist

      # 读取发布版本
      - name: Read Release Version
        id: release_version
        uses: ashley-taylor/read-json-property-action@v1.0
        with:
          path: release/package.json
          property: version

      # 打包构建 Server
      - name: Build Server
        uses: actions/setup-go@v2
        with:
          go-version: "^1.19"

      # 将静态资源打包html.go
      - run: |
          go test -v -timeout 3600s -run ^TestStatic$ teamide/internal/static
          go build -ldflags="-s -X teamide/pkg/base.version=${{ steps.release_version.outputs.value }}" -o ./electron/teamide-darwin-x64 .
          go build -ldflags="-s -X teamide/pkg/base.version=${{ steps.release_version.outputs.value }}" -o ./release/teamide-darwin-x64/teamide-node teamide/pkg/node/main
      - run: |
          cd release/teamide-darwin-x64
          nohup ./teamide-node -id teamide-test-mac -address :51091 -token teamide-token -connAddress teamide.com:51091 -connToken teamide-token  > start.log 2>&1 &
      - run: |
          cd electron
          ./teamide-darwin-x64 
